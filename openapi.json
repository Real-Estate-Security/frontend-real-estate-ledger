{
    "openapi": "3.0.0",
    "x-origin": [
        {
            "url": "http://localhost:8000/swagger/doc.json",
            "format": "swagger",
            "version": "2.0",
            "converter": {
                "url": "https://github.com/mermade/oas-kit",
                "version": "7.0.8"
            }
        }
    ],
    "info": {
        "description": "",
        "title": "",
        "contact": {},
        "version": ""
    },
    "paths": {
        "/agent/accept-representation/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an agent to accept a representation request.",
                "tags": [
                    "agent"
                ],
                "summary": "Accept representation request",
                "parameters": [
                    {
                        "description": "Representation ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Representation request accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Representation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/decline-representation/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an agent to decline a representation request.",
                "tags": [
                    "agent"
                ],
                "summary": "Decline representation request",
                "parameters": [
                    {
                        "description": "Representation ID",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Representation request declined successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Representation not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/representation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetches all representations for the authenticated user, whether they are an agent or a regular user.",
                "tags": [
                    "representations"
                ],
                "summary": "List representations",
                "parameters": [
                    {
                        "description": "Limit (default: 10)",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Offset (default: 0)",
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of representations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/server.RepresentationData"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/request-representation": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows an agent to request representation for a user.",
                "tags": [
                    "agent"
                ],
                "summary": "Request representation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.requestAgentRepresentationRequest"
                            }
                        }
                    },
                    "description": "Request Representation Request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Representation request submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the server",
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bidding/acceptBid": {
            "put": {
                "description": "accept a bid",
                "tags": [
                    "bidding"
                ],
                "summary": "accept a bid",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.rejectBidRequest"
                            }
                        }
                    },
                    "description": "accept a bid",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bidding/createBid": {
            "post": {
                "description": "create a bid",
                "tags": [
                    "bidding"
                ],
                "summary": "create a bid",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.createBidRequest"
                            }
                        }
                    },
                    "description": "create a bid",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.bidResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bidding/listBids": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "listing all bids belonging to a given buyer",
                "tags": [
                    "bidding"
                ],
                "summary": "given user, list all bid with them as buyer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.listBidsRequest"
                            }
                        }
                    },
                    "description": "listing all bids belonging to a given buyer",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "list of bids",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/server.listBidResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bidding/listLatestBidOnListing": {
            "post": {
                "description": "listing most recent bid on a listing",
                "tags": [
                    "bidding"
                ],
                "summary": "given listing, list most recent bid on a listing",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.listBidsOnListingRequest"
                            }
                        }
                    },
                    "description": "listing most recent bid on a specific listing",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "bid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.listBidResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bidding/rejectBid": {
            "put": {
                "description": "reject a bid",
                "tags": [
                    "bidding"
                ],
                "summary": "reject a bid",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.rejectBidRequest"
                            }
                        }
                    },
                    "description": "reject a bid",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bidding/updateBidStatus": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update a bid's status",
                "tags": [
                    "bidding"
                ],
                "summary": "update a bid's status",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.updateBidStatusRequest"
                            }
                        }
                    },
                    "description": "update a bid status",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/listing/getListingByPropertyID": {
            "post": {
                "description": "get listing by property id",
                "tags": [
                    "listing"
                ],
                "summary": "get listing by property id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.getListingByIDRequest"
                            }
                        }
                    },
                    "description": "get listig by property id",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.listingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/listing/getListings": {
            "get": {
                "description": "get listing by property id",
                "tags": [
                    "listing"
                ],
                "summary": "display properties",
                "parameters": [
                    {
                        "description": "Limit (default: 10)",
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.listingDisplayResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/listing": {
            "get": {
                "description": "Get listings with optional pagination",
                "tags": [
                    "listing"
                ],
                "summary": "Display properties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/server.listingDisplayResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties": {
            "post": {
                "description": "creating a listing for a property",
                "tags": [
                    "properties"
                ],
                "summary": "given listing, create property if doesn't exist and then create listing for that property",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.createListingRequest"
                            }
                        }
                    },
                    "description": "creating a listing for a property",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties": {
            "post": {
                "description": "creating a listing for a property",
                "tags": [
                    "properties"
                ],
                "summary": "given listing, create property if doesn't exist and then create listing for that property",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.createListingRequest"
                            }
                        }
                    },
                    "description": "creating a listing for a property",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties": {
            "post": {
                "description": "creating a listing for a property",
                "tags": [
                    "properties"
                ],
                "summary": "given listing, create property if doesn't exist and then create listing for that property",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.createListingRequest"
                            }
                        }
                    },
                    "description": "creating a listing for a property",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/property/getPropertyByID": {
            "post": {
                "description": "get property by id",
                "tags": [
                    "property"
                ],
                "summary": "get property by id",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.getPropertyByIDRequest"
                            }
                        }
                    },
                    "description": "get property by id",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.propertyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/hello-world": {
            "get": {
                "description": "HelloWorld example",
                "tags": [
                    "example"
                ],
                "summary": "HelloWorld example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Authenticates a user and returns an access token along with user details.",
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.loginUserRequest"
                            }
                        }
                    },
                    "description": "Login request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.loginUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the information of the authenticated user based on the authorization token provided.",
                "tags": [
                    "user"
                ],
                "summary": "Get authenticated user information",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.userMeResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Create a new user with the provided details",
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/server.createUserRequest"
                            }
                        }
                    },
                    "description": "Create User Request",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/server.userResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "components": {
        "schemas": {
            "server.NullableTime": {
                "type": "object",
                "properties": {
                    "time": {
                        "type": "string"
                    },
                    "valid": {
                        "type": "boolean"
                    }
                }
            },
            "server.RepresentationData": {
                "type": "object",
                "properties": {
                    "agent_first_name": {
                        "type": "string"
                    },
                    "agent_id": {
                        "type": "integer"
                    },
                    "agent_last_name": {
                        "type": "string"
                    },
                    "agent_username": {
                        "type": "string"
                    },
                    "client_first_name": {
                        "type": "string"
                    },
                    "client_id": {
                        "type": "integer"
                    },
                    "client_last_name": {
                        "type": "string"
                    },
                    "client_username": {
                        "type": "string"
                    },
                    "end_date": {
                        "$ref": "#/components/schemas/server.NullableTime"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "requested_at": {
                        "type": "string"
                    },
                    "signed_at": {
                        "$ref": "#/components/schemas/server.NullableTime"
                    },
                    "start_date": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "server.createListingRequest": {
                "type": "object",
                "required": [
                    "Address",
                    "AgentEmail",
                    "Bathrooms",
                    "Bedrooms",
                    "City",
                    "OwnerEmail",
                    "OwnerFirstName",
                    "OwnerLastName",
                    "Price",
                    "State",
                    "Zipcode"
                ],
                "properties": {
                    "Address": {
                        "type": "string"
                    },
                    "AgentEmail": {
                        "type": "string"
                    },
                    "AgentFirstName": {
                        "type": "string"
                    },
                    "AgentLastName": {
                        "type": "string"
                    },
                    "Bathrooms": {
                        "type": "integer"
                    },
                    "Bedrooms": {
                        "type": "integer"
                    },
                    "City": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "OwnerEmail": {
                        "type": "string"
                    },
                    "OwnerFirstName": {
                        "type": "string"
                    },
                    "OwnerLastName": {
                        "type": "string"
                    },
                    "Price": {
                        "type": "string"
                    },
                    "State": {
                        "type": "string"
                    },
                    "Zipcode": {
                        "type": "integer"
                    }
                }
            },
            "server.bidResponse": {
                "type": "object",
                "required": [
                    "AgentID",
                    "Amount",
                    "BuyerID",
                    "ID",
                    "ListingID",
                    "PreviousBidID"
                ],
                "properties": {
                    "AgentID": {
                        "type": "integer"
                    },
                    "Amount": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "integer"
                    },
                    "ID": {
                        "type": "integer"
                    },
                    "ListingID": {
                        "type": "integer"
                    },
                    "PreviousBidID": {
                        "type": "integer"
                    }
                }
            },
            "server.createBidRequest": {
                "type": "object",
                "required": [
                    "AgentID",
                    "Amount",
                    "BuyerID",
                    "ListingID"
                ],
                "properties": {
                    "AgentID": {
                        "type": "integer"
                    },
                    "Amount": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "integer"
                    },
                    "ListingID": {
                        "type": "integer"
                    },
                    "PreviousBidID": {
                        "type": "integer"
                    }
                }
            },
            "server.createListingRequest": {
                "type": "object",
                "required": [
                    "Address",
                    "AgentEmail",
                    "Bathrooms",
                    "Bedrooms",
                    "City",
                    "OwnerEmail",
                    "OwnerFirstName",
                    "OwnerLastName",
                    "Price",
                    "State",
                    "Zipcode"
                ],
                "properties": {
                    "Address": {
                        "type": "string"
                    },
                    "AgentEmail": {
                        "type": "string"
                    },
                    "AgentFirstName": {
                        "type": "string"
                    },
                    "AgentLastName": {
                        "type": "string"
                    },
                    "Bathrooms": {
                        "type": "integer"
                    },
                    "Bedrooms": {
                        "type": "integer"
                    },
                    "City": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "OwnerEmail": {
                        "type": "string"
                    },
                    "OwnerFirstName": {
                        "type": "string"
                    },
                    "OwnerLastName": {
                        "type": "string"
                    },
                    "Price": {
                        "type": "string"
                    },
                    "State": {
                        "type": "string"
                    },
                    "Zipcode": {
                        "type": "integer"
                    }
                }
            },
            "server.createUserRequest": {
                "type": "object",
                "required": [
                    "dob",
                    "email",
                    "first_name",
                    "last_name",
                    "password",
                    "role",
                    "username"
                ],
                "properties": {
                    "dob": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "agent"
                        ]
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "server.getListingByIDRequest": {
                "type": "object",
                "required": [
                    "PropertyID",
                    "Username"
                ],
                "properties": {
                    "PropertyID": {
                        "type": "integer"
                    },
                    "Username": {
                        "type": "string"
                    }
                }
            },
            "server.getPropertyByIDRequest": {
                "type": "object",
                "required": [
                    "PropertyID",
                    "Username"
                ],
                "properties": {
                    "PropertyID": {
                        "type": "integer"
                    },
                    "Username": {
                        "type": "string"
                    }
                }
            },
            "server.listingDisplayResponse": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "bathrooms": {
                        "type": "integer"
                    },
                    "bedrooms": {
                        "type": "integer"
                    },
                    "city": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "listing_date": {
                        "type": "string"
                    },
                    "listing_status": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zipcode": {
                        "type": "integer"
                    }
                }
            },
            "server.listBidResponse": {
                "type": "object",
                "required": [
                    "AgentID",
                    "Amount",
                    "BuyerID",
                    "ID",
                    "ListingID",
                    "PreviousBidID",
                    "Status"
                ],
                "properties": {
                    "AgentID": {
                        "type": "integer"
                    },
                    "Amount": {
                        "type": "string"
                    },
                    "BuyerID": {
                        "type": "integer"
                    },
                    "ID": {
                        "type": "integer"
                    },
                    "ListingID": {
                        "type": "integer"
                    },
                    "PreviousBidID": {
                        "type": "integer"
                    },
                    "Status": {
                        "type": "string"
                    }
                }
            },
            "server.listBidsOnListingRequest": {
                "type": "object",
                "required": [
                    "ListingID"
                ],
                "properties": {
                    "ListingID": {
                        "type": "integer"
                    }
                }
            },
            "server.listBidsRequest": {
                "type": "object",
                "required": [
                    "Username"
                ],
                "properties": {
                    "Username": {
                        "type": "string"
                    }
                }
            },
            "server.listingDisplayResponse": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "bathrooms": {
                        "type": "integer"
                    },
                    "bedrooms": {
                        "type": "integer"
                    },
                    "city": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "listing_date": {
                        "type": "string"
                    },
                    "listing_status": {
                        "type": "string"
                    },
                    "price": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "zipcode": {
                        "type": "integer"
                    }
                }
            },
            "server.listingResponse": {
                "type": "object",
                "required": [
                    "AcceptedBidID",
                    "AgentID",
                    "Description",
                    "ID",
                    "ListingDate",
                    "ListingStatus",
                    "Price",
                    "PropertyID"
                ],
                "properties": {
                    "AcceptedBidID": {
                        "type": "integer"
                    },
                    "AgentID": {
                        "type": "integer"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "ID": {
                        "type": "integer"
                    },
                    "ListingDate": {
                        "type": "string"
                    },
                    "ListingStatus": {
                        "type": "string"
                    },
                    "Price": {
                        "type": "string"
                    },
                    "PropertyID": {
                        "type": "integer"
                    }
                }
            },
            "server.loginUserRequest": {
                "type": "object",
                "required": [
                    "password",
                    "username"
                ],
                "properties": {
                    "password": {
                        "type": "string",
                        "minLength": 6
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "server.loginUserResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/server.userResponse"
                    }
                }
            },
            "server.propertyResponse": {
                "type": "object",
                "required": [
                    "Address",
                    "City",
                    "ID",
                    "NumOfBathrooms",
                    "NumOfBedrooms",
                    "Owner",
                    "State",
                    "ZipCode"
                ],
                "properties": {
                    "Address": {
                        "type": "string"
                    },
                    "City": {
                        "type": "string"
                    },
                    "ID": {
                        "type": "integer"
                    },
                    "NumOfBathrooms": {
                        "type": "integer"
                    },
                    "NumOfBedrooms": {
                        "type": "integer"
                    },
                    "Owner": {
                        "type": "integer"
                    },
                    "State": {
                        "type": "string"
                    },
                    "ZipCode": {
                        "type": "integer"
                    }
                }
            },
            "server.rejectBidRequest": {
                "type": "object",
                "required": [
                    "ID"
                ],
                "properties": {
                    "ID": {
                        "type": "integer"
                    }
                }
            },
            "server.requestAgentRepresentationRequest": {
                "type": "object",
                "required": [
                    "client_username",
                    "end_date",
                    "start_date"
                ],
                "properties": {
                    "client_username": {
                        "type": "string"
                    },
                    "end_date": {
                        "type": "string"
                    },
                    "start_date": {
                        "type": "string"
                    }
                }
            },
            "server.updateBidStatusRequest": {
                "type": "object",
                "required": [
                    "BidId",
                    "NewStatus"
                ],
                "properties": {
                    "BidId": {
                        "type": "integer"
                    },
                    "NewStatus": {
                        "type": "string"
                    }
                }
            },
            "server.userMeResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/server.userResponse"
                    }
                }
            },
            "server.userResponse": {
                "type": "object",
                "required": [
                    "dob",
                    "email",
                    "first_name",
                    "last_name",
                    "role",
                    "username"
                ],
                "properties": {
                    "dob": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "user",
                            "agent"
                        ]
                    },
                    "username": {
                        "type": "string"
                    }
                }
            }
        }
    }
}